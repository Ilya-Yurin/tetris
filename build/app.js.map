{"version":3,"sources":["webpack:///webpack/bootstrap b498d79cc699ff27dc53","webpack:///./src/app.js","webpack:///./src/tetris.js","webpack:///./src/row.js","webpack:///./src/cell.js","webpack:///./src/figure.js","webpack:///./src/tetris.css"],"names":["tetrises","push","rows","cells","tickDelay","control","moveLeft","moveRight","boost","rotate","setTimeout","i","length","start","Tetris","objectToBeCloned","Object","objectClone","constructor","keys","l","prop","cloneDeep","tetris","tickCbsFor","index","objectToAssign","objectToBeAssigned","overwrite","prototype","hasOwnProperty","call","assignDeep","params","counter","defaultParams","playerName","DOM","document","createElement","selectors","querySelector","appendChild","className","classes","common","containerDOM","container","fieldDOM","field","scoreDOM","score","textContent","controlDOM","pauseDOM","pause","innerText","texts","addEventListener","startDOM","unpauseDOM","unpause","queueDOM","queue","boosting","figuresQueue","figuresInQueue","processQueue","started","lastTickTime","lastMovingTime","lastRotatingTime","lastBoostingTime","gameTime","liveTime","figure","paused","rotating","gameOver","event","keyCode","classList","add","played","addToTickCbs","remove","innerHTML","form","figureDOM","ri","rl","row","rowDOM","figureRow","ci","cl","cell","cellDOM","figureCell","filled","empty","color","colorIndex","removeFromTickCbs","dt","processMoving","processRotating","processBoosting","rotatingDelay","boostingDelay","movingDelay","move","processRows","touched","toBricks","checkFilledLines","canMove","coords","coord","y","x","shift","process","scope","multiply","filledCount","n","s","recreate","highlighted","colored","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","lastFrameTime","ticker","Date","now","nowTime","tick","Row","addTo","insertBefore","firstChild","rowIndex","removeChild","splice","unshift","Cell","cellIndex","needleFilled","needleHighlighted","undefined","replace","RegExp","Figure","baseCoord","rotateCoords","relativeFromBase","transormed","direction","Math","floor","random","forms","desc","pop","rotatable","base","rotateCount","mathRotate","maxX","minX","maxY","minY","minCoord","width","height","startX","startY","offsetX","offsetY","pristineCoords","mathMove","rowAbove","cellAbove"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b498d79cc699ff27dc53","import Tetris from './tetris';\nimport './tetris.css';\n\nconst tetrises = [];\n\ntetrises.push(\n  new Tetris({\n    rows: 30,\n    cells: 15,\n    tickDelay: 300,\n    control: {\n      moveLeft: 37,\n      moveRight: 39,\n      boost: 40,\n      rotate: 38\n    },\n  }),\n  new Tetris({\n    rows: 30,\n    cells: 15,\n    tickDelay: 300,\n    control: {\n      moveLeft: 65,\n      moveRight: 68,\n      boost: 83,\n      rotate: 87\n    },\n  })\n);\n\n// автоматически стартуем все тетрисы в одно время\nsetTimeout(() => {\n  let i = tetrises.length;\n  while (i--) {\n    tetrises[i].start();\n  }\n}, 1000);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import Row from './row';\nimport Figure from './figure';\n\nclass Tetris {\n  static tickCbsFor = {};\n  static counter = 0;\n  static defaultParams = {\n    rows: 25,\n    cells: 11,\n    tickDelay: 800,\n    movingDelay: 180,\n    rotatingDelay: 180,\n    boostingDelay: 30,\n    figuresInQueue: 5,\n    control: {\n      moveLeft: 37,\n      moveRight: 39,\n      boost: 40,\n      rotate: 38\n    },\n    selectors: {\n      tetris: 'div',\n      row: 'div',\n      cell: 'div',\n      score: 'div',\n      pause: 'button',\n      start: 'button',\n      unpause: 'button',\n      field: 'div',\n      control: 'div',\n      queue: 'div',\n      figure: 'div',\n      figureCell: 'div',\n      figureRow: 'div',\n      container: 'div'\n    },\n    texts: {\n      unpause: 'Play',\n      pause: 'Pause',\n      start: 'Start'\n    },\n    classes: {\n      row: {\n        filled: 'tetris__row-filled',\n        common: 'tetris__row'\n      },\n      cell: {\n        filled: 'tetris__cell-filled',\n        common: 'tetris__cell',\n        highlighted: 'tetris__cell-highlighted',\n        colored: 'tetris__cell-colored'\n      },\n      tetris: {\n        common: 'tetris',\n        paused: 'tetris-paused',\n        started: 'tetris-started',\n        played: 'tetris-played'\n      },\n      field: {\n        common: 'tetris__field'\n      },\n      score: {\n        common: 'tetris__score'\n      },\n      pause: {\n        common: 'tetris__pause'\n      },\n      start: {\n        common: 'tetris__start'\n      },\n      unpause: {\n        common: 'tetris__unpause'\n      },\n      control: {\n        common: 'tetris__control'\n      },\n      queue: {\n        common: 'tetris__queue'\n      },\n      figure: {\n        common: 'tetris__figure'\n      },\n      figureRow: {\n        common: 'tetris__figure-row'\n      },\n      figureCell: {\n        common: 'tetris__figure-cell',\n        empty: 'tetris__figure-cell_empty',\n        filled: 'tetris__figure-cell_filled',\n        color: 'tetris__figure-cell_colored'\n      },\n      container: {\n        common: 'tetris__container'\n      }\n    }\n  };\n  static cloneDeep(objectToBeCloned) {\n    if (!(objectToBeCloned instanceof Object)) {\n      return objectToBeCloned;\n    }\n\n    // создаём объект на основе констркуктора, это может быть Array или Object\n    const objectClone = new objectToBeCloned.constructor();\n\n    const keys = Object.keys(objectToBeCloned);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      objectClone[prop] = Tetris.cloneDeep(objectToBeCloned[prop]);\n    }\n\n    return objectClone;\n  }\n\n  static removeFromTickCbs(tetris) {\n    delete Tetris.tickCbsFor[tetris.index];\n  }\n\n  static addToTickCbs(tetris) {\n    Tetris.tickCbsFor[tetris.index] = tetris;\n  }\n\n  // overwrite - перезаписывать свойство если оно есть, или оставить исходным\n  static assignDeep(objectToAssign, objectToBeAssigned, overwrite) {\n    overwrite = overwrite || false;\n    if (!(objectToAssign instanceof Object) || !(objectToBeAssigned instanceof Object)) {\n      return;\n    }\n\n    const keys = Object.keys(objectToBeAssigned);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n\n      if (Object.prototype.hasOwnProperty.call(objectToAssign, prop)) {\n        if (objectToAssign[prop] instanceof Object && objectToAssign[prop] instanceof Object) {\n          Tetris.assignDeep(objectToAssign[prop], objectToBeAssigned[prop], overwrite);\n        } else if (overwrite) {\n          objectToAssign[prop] = Tetris.cloneDeep(objectToBeAssigned[prop]);\n        }\n      } else {\n        objectToAssign[prop] = Tetris.cloneDeep(objectToBeAssigned[prop]);\n      }\n    }\n  }\n\n  constructor(params) {\n    // для генерации имени пользователя\n    this.index = ++Tetris.counter;\n\n    // делаем параметры на основе дефолтных\n    params = params || {};\n    this.params = Tetris.cloneDeep(params);\n    Tetris.assignDeep(this.params, Tetris.defaultParams);\n\n    // берём имя из параметров или генерируем на основе индекса\n    if (!this.params.playerName) {\n      this.params.playerName = `Player ${this.index}`;\n    }\n\n    // DOM каркаса тетриса\n    this.DOM = document.createElement(this.params.selectors.tetris);\n    document.querySelector('body').appendChild(this.DOM);\n    this.DOM.className = this.params.classes.tetris.common;\n\n    // DOM контейнера, для удобства CSS\n    this.containerDOM = document.createElement(this.params.selectors.container);\n    this.DOM.appendChild(this.containerDOM);\n    this.containerDOM.className = this.params.classes.container.common;\n\n    // DOM игрового поля\n    this.fieldDOM = document.createElement(this.params.selectors.field);\n    this.containerDOM.appendChild(this.fieldDOM);\n    this.fieldDOM.className = this.params.classes.field.common;\n\n    // DOM очков\n    this.scoreDOM = document.createElement(this.params.selectors.score);\n    this.containerDOM.appendChild(this.scoreDOM);\n    this.scoreDOM.className = this.params.classes.score.common;\n    this.scoreDOM.textContent = 0;\n\n    // DOM control'a\n    this.controlDOM = document.createElement(this.params.selectors.control);\n    this.containerDOM.appendChild(this.controlDOM);\n    this.controlDOM.className = this.params.classes.control.common;\n\n    // DOM кнопки паузы\n    this.pauseDOM = document.createElement(this.params.selectors.pause);\n    this.controlDOM.appendChild(this.pauseDOM);\n    this.pauseDOM.className = this.params.classes.pause.common;\n    this.pauseDOM.innerText = this.params.texts.pause;\n    this.pauseDOM.addEventListener('click', () => {\n      this.pause();\n    });\n\n    // DOM кнопки старта\n    this.startDOM = document.createElement(this.params.selectors.start);\n    this.controlDOM.appendChild(this.startDOM);\n    this.startDOM.className = this.params.classes.start.common;\n    this.startDOM.innerText = this.params.texts.start;\n    this.startDOM.addEventListener('click', () => {\n      this.start();\n    });\n\n    // DOM кнопки возобновления игры\n    this.unpauseDOM = document.createElement(this.params.selectors.unpause);\n    this.controlDOM.appendChild(this.unpauseDOM);\n    this.unpauseDOM.className = this.params.classes.unpause.common;\n    this.unpauseDOM.innerText = this.params.texts.unpause;\n    this.unpauseDOM.addEventListener('click', () => {\n      this.unpause();\n    });\n\n    // DOM queue\n    this.queueDOM = document.createElement(this.params.selectors.queue);\n    this.containerDOM.appendChild(this.queueDOM);\n    this.queueDOM.className = this.params.classes.queue.common;\n\n    // флаг для ускорения фигуры\n    this.boosting = false;\n\n    // здесь будем хранить все строки игрового поля (в них все ячейки)\n    this.rows = [];\n\n    // храним очки пользователя\n    this.score = 0;\n\n    // подготавливаем очередь фигур\n    this.figuresQueue = [];\n    for (let i = 0; i < this.params.figuresInQueue; i++) {\n      this.figuresQueue.push(new Figure(this));\n    }\n\n    // перерисовывам очередь\n    this.processQueue();\n\n    // флаг, который отображаем вызов метода start\n    this.started = false;\n\n    // здесь храним время последних действий частоту которых надо ограничить\n    this.lastTickTime = 0;\n    this.lastMovingTime = 0;\n    this.lastRotatingTime = 0;\n    this.lastBoostingTime = 0;\n\n    // время фактической игры без пауз и простоев\n    this.gameTime = 0;\n\n    // общее время жизни тетриса\n    this.liveTime = 0;\n\n    // текущая фигура которой управляет игрок\n    this.figure = new Figure(this);\n\n    // флаги для отлова действий пользователя\n    this.paused = false;\n    this.moveRight = false;\n    this.moveLeft = false;\n    this.rotating = false;\n\n    // флаг конца игры\n    this.gameOver = false;\n\n\n    for (let i = 0, l = this.params.rows; i < l; i++) {\n      this.rows.push(new Row(this));\n    }\n\n    // ловим действия пользователя для работы с управлением фигуры пользователя\n    document.addEventListener('keyup', (event) => {\n      if (event.keyCode === this.params.control.boost) { // это код кнопки «Вниз»\n        this.boosting = false;\n      }\n\n      if (event.keyCode === this.params.control.moveRight) {\n        this.moveRight = false;\n      }\n\n      if (event.keyCode === this.params.control.rotate) {\n        this.rotating = false;\n      }\n\n      if (event.keyCode === this.params.control.moveLeft) {\n        this.moveLeft = false;\n      }\n    }, false);\n\n    // ловим действия пользователя для работы с управлением фигуры пользователя\n    document.addEventListener('keydown', (event) => {\n      if (event.keyCode === this.params.control.boost) {\n        this.boosting = true;\n      }\n\n      if (event.keyCode === this.params.control.moveRight) {\n        this.moveRight = true;\n      }\n\n      if (event.keyCode === this.params.control.rotate) {\n        this.rotating = true;\n      }\n\n      if (event.keyCode === this.params.control.moveLeft) {\n        this.moveLeft = true;\n      }\n    }, false);\n  }\n\n  // метод, который надо вызвать после инициализации тетриса, чтобы игра началась\n  start() {\n    this.started = true;\n    this.DOM.classList.add(this.params.classes.tetris.started);\n    this.DOM.classList.add(this.params.classes.tetris.played);\n    Tetris.addToTickCbs(this);\n  }\n\n  // снимает игру с паузы\n  unpause() {\n    if (!this.started) {\n      return;\n    }\n\n    this.paused = false;\n    this.DOM.classList.remove(this.params.classes.tetris.paused);\n    this.DOM.classList.add(this.params.classes.tetris.played);\n    Tetris.addToTickCbs(this);\n  }\n\n  // рисуем очередь\n  processQueue() {\n    this.queueDOM.innerHTML = '';\n    for (let i = 0, l = this.figuresQueue.length; i < l; i++) {\n      const figure = this.figuresQueue[i];\n      const form = figure.form;\n      const figureDOM = document.createElement(this.params.selectors.figure);\n      this.queueDOM.appendChild(figureDOM);\n      figureDOM.className = this.params.classes.figure.common;\n      for (let ri = 0, rl = form.length; ri < rl; ri++) {\n        const row = form[ri];\n        const rowDOM = document.createElement(this.params.selectors.figureRow);\n        figureDOM.appendChild(rowDOM);\n        rowDOM.className = this.params.classes.figureRow.common;\n        for (let ci = 0, cl = row.length; ci < cl; ci++) {\n          const cell = row[ci];\n          const cellDOM = document.createElement(this.params.selectors.figureCell);\n          rowDOM.appendChild(cellDOM);\n          cellDOM.classList.add(this.params.classes.figureCell.common);\n          if (cell) {\n            cellDOM.classList.add(this.params.classes.figureCell.filled);\n          } else {\n            cellDOM.classList.add(this.params.classes.figureCell.empty);\n          }\n          cellDOM.classList.add(`${this.params.classes.figureCell.color}-${figure.colorIndex}`);\n        }\n      }\n    }\n  }\n\n  // ставит игру на паузу\n  pause() {\n    if (!this.started) {\n      return;\n    }\n\n    this.paused = true;\n    this.DOM.classList.add(this.params.classes.tetris.paused);\n    this.DOM.classList.remove(this.params.classes.tetris.played);\n    Tetris.removeFromTickCbs(this);\n  }\n\n  // ядро тетриса, перерисовывает поле, реагирует на действия пользователя\n  tick(dt) {\n    // считаем фактическое время жизни тетриса\n    this.liveTime += dt;\n\n    // ничего не делаем, если игра закончилась, на паузе или не начата\n    if (this.gameOver || this.paused || !this.started) {\n      return;\n    }\n\n    // считаем время игры без пауз\n    this.gameTime += dt;\n\n    // вспомогательные флаги для обработки действий пользователя\n    //  даже если пользователь нажал кнопку или хочет сделать какое-либо действие\n    //  мы должны его обработать только при определенном наборе условий, например, если выдержана определенная задержка между действиями\n    let processMoving = false;\n    let processRotating = false;\n    let processBoosting = false;\n\n    // обрабатываем действия на перемещение и вращение подконтрольной фигуры пользователя\n    if (this.figure) {\n      // пользователь нажал на вращение, то мы должны разрещать его только в n времени\n      if (this.rotating && (this.gameTime - this.lastRotatingTime) >= this.params.rotatingDelay) {\n        this.figure.rotate();\n        processRotating = true;\n      }\n\n      // если пользователь нажал boost то мы должны разрешать его только в n времени\n      if (this.boosting && (this.gameTime - this.lastBoostingTime) >= this.params.boostingDelay) {\n        processBoosting = true;\n      }\n\n      // если пользователь нажал на перемещении то мы должны разрешать его только в n времнеи\n      if ((this.gameTime - this.lastMovingTime) >= this.params.movingDelay) {\n        if (this.moveLeft) {\n          this.figure.move('left');\n          processMoving = true;\n        }\n        if (this.moveRight) {\n          this.figure.move('right');\n          processMoving = true;\n        }\n      }\n    }\n\n    // трекаем время для реализации задержки перемещения\n    if (processMoving) {\n      this.lastMovingTime = this.gameTime;\n    }\n\n    // трекаем время для реализации задержки вращения\n    if (processRotating) {\n      this.lastRotatingTime = this.gameTime;\n    }\n\n    // запускаем отрисовку вращения и перемещения фигуры, но только если пользователь не жмёт в это время bost\n    //  чтобы избежать двойной отрисовки\n    if ((this.gameTime - this.lastTickTime) < this.params.tickDelay && !processBoosting) {\n      if (processMoving || processRotating) {\n        this.processRows();\n      }\n      return;\n    }\n\n    // трекаем время для реализации задержки boost\n    if (processBoosting) {\n      this.lastBoostingTime = this.gameTime;\n    }\n\n    // трекаем время для реализации глобальной задержки\n    this.lastTickTime = this.gameTime;\n\n    // если фигура с чем-то соприкоснулась, то мы добавляем её к независымым кирпичикам\n    if (this.figure.touched()) {\n      this.figure.toBricks();\n\n      // проверяем заполненость линий\n      this.checkFilledLines();\n\n      // фигуре некуда двигаться дальше начала, игра закончилась\n      let canMove = true;\n      for (let i = 0, l = this.figure.coords.length; i < l; i++) {\n        const coord = this.figure.coords[i];\n        if (coord.y === 0 && this.rows[coord.y].cells[coord.x].filled) {\n          canMove = false;\n          break;\n        }\n      }\n      if (!canMove) {\n        this.gameOver = true;\n        Tetris.removeFromTickCbs(this);\n        return;\n      }\n\n      // берём фигуру из очереди и закидываем новую фигуру в очередь\n      // перерисовываем очередь\n      this.figure = this.figuresQueue.shift();\n      this.figuresQueue.push(new Figure(this));\n      this.processQueue();\n    } else { // иначе просто двигаем фигуру ниже\n      this.figure.move('bottom');\n    }\n\n    // делаем отрисовку\n    //  в целях экономии ресурсов нужно не делать отрисоку по глобальному таймеру и в момент вращения/перемещения фигур одновременно (двойная отрисовка)\n    this.processRows();\n  }\n\n  // работаем со строками, в частности отрисовываем их\n  processRows() {\n    for (let i = 0, l = this.rows.length; i < l; i++) {\n      this.rows[i].process(i);\n    }\n  }\n\n  // проверяем заполненость линий\n  checkFilledLines() {\n    // за каждую линию даём 100 очков\n    //  также за каждую линиую в подряд за раз увеличиваем множитель очков\n    //  за одну линию множитель будет равен 0, поэтому 0 доп очков\n    //  за 2 линии, будет равен 1, за 3 линии, будет равен 2\n    //  например за 3 линии очки будут: 300 + 300 * 2\n    let scope = 0;\n    let multiply = -1;\n    for (let i = 0, l = this.rows.length; i < l; i++) {\n      const row = this.rows[i];\n      let filledCount = 0;\n      for (let n = 0, s = row.cells.length; n < s; n++) {\n        const cell = row.cells[n];\n        if (cell.filled) {\n          filledCount++;\n        }\n      }\n\n      if (filledCount === row.cells.length) {\n        this.rows[i].recreate(i);\n        scope += 100;\n        multiply += 1;\n      }\n    }\n\n    if (scope) {\n      this.score = (this.score * 1) + scope + (scope * multiply);\n      this.scoreDOM.innerText = this.score;\n    }\n  }\n}\n\n// браузер стремится запрашивать 60 кадров в секунду\nconst requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame\n                              || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\nlet lastFrameTime;\n\n// вызывает каждый тетрис на каждый адрес и передаём dt - задержку между кадрами (милесекунд)\nfunction ticker() {\n  lastFrameTime = lastFrameTime || Date.now();\n  const nowTime = Date.now();\n  const dt = nowTime - lastFrameTime;\n  lastFrameTime = nowTime;\n  Tetris.gameTime += dt;\n\n  const keys = Object.keys(Tetris.tickCbsFor);\n  for (let i = 0, l = keys.length; i < l; i++) {\n    Tetris.tickCbsFor[keys[i]].tick(dt);\n  }\n\n  requestAnimationFrame(ticker);\n}\n\nrequestAnimationFrame(ticker);\n\nexport default Tetris;\n\n\n\n// WEBPACK FOOTER //\n// ./src/tetris.js","import Cell from './cell';\n\nclass Row {\n  constructor(tetris, addTo) {\n    addTo = addTo || 'bottom';\n    this.tetris = tetris;\n    this.DOM = document.createElement(tetris.params.selectors.row);\n    this.DOM.className = this.tetris.params.classes.row.common;\n    if (addTo === 'bottom') {\n      this.tetris.fieldDOM.appendChild(this.DOM);\n    } else {\n      this.tetris.fieldDOM.insertBefore(this.DOM, this.tetris.fieldDOM.firstChild);\n    }\n    this.cells = [];\n\n    for (let i = 0, l = this.tetris.params.cells; i < l; i++) {\n      this.cells.push(new Cell(this));\n    }\n  }\n\n  process(rowIndex) {\n    for (let i = 0, l = this.cells.length; i < l; i++) {\n      this.cells[i].process(rowIndex, i);\n    }\n  }\n\n  recreate(rowIndex) {\n    this.tetris.fieldDOM.removeChild(this.DOM);\n    this.tetris.rows.splice(rowIndex, 1);\n    this.tetris.rows.unshift(new Row(this.tetris, 'top'));\n  }\n}\n\nexport default Row;\n\n\n\n// WEBPACK FOOTER //\n// ./src/row.js","class Cell {\n  constructor(row) {\n    this.row = row;\n    this.tetris = this.row.tetris;\n    this.DOM = document.createElement(this.tetris.params.selectors.cell);\n    this.row.DOM.appendChild(this.DOM);\n    this.DOM.className = this.tetris.params.classes.cell.common;\n    this.filled = false;\n    this.colored = false;\n  }\n\n  process(rowIndex, cellIndex) {\n    let needleFilled = false;\n    let needleHighlighted = false;\n    let colorIndex;\n\n    if (this.tetris.figure) {\n      for (let i = 0, l = this.tetris.figure.coords.length; i < l; i++) {\n        const coord = this.tetris.figure.coords[i];\n\n        if (coord.x === cellIndex) {\n          needleHighlighted = true;\n        }\n\n        if (\n          coord.x === cellIndex\n          && coord.y === rowIndex\n        ) {\n          this.DOM.classList.add(this.tetris.params.classes.cell.filled);\n          colorIndex = this.tetris.figure.colorIndex;\n          needleFilled = true;\n        }\n      }\n    }\n\n    if (this.colorIndex !== undefined) {\n      colorIndex = this.colorIndex;\n    }\n\n    if (colorIndex) {\n      this.DOM.classList.add(`${this.tetris.params.classes.cell.colored}-${colorIndex}`);\n      this.colored = true;\n    } else if (this.colored) {\n      this.colored = false;\n      this.DOM.className = this.DOM.className.replace(new RegExp(`(${this.tetris.params.classes.cell.colored}-\\\\d)*`, 'ig'), '');\n    }\n\n    if (!needleFilled && !this.filled) {\n      this.DOM.classList.remove(this.tetris.params.classes.cell.filled);\n    }\n\n    if (this.filled) {\n      this.DOM.classList.add(this.tetris.params.classes.cell.filled);\n    }\n\n    if (needleHighlighted) {\n      this.DOM.classList.add(this.tetris.params.classes.cell.highlighted);\n    } else {\n      this.DOM.classList.remove(this.tetris.params.classes.cell.highlighted);\n    }\n  }\n\n}\n\nexport default Cell;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cell.js","import Tetris from './tetris';\n\nclass Figure {\n  static forms = [\n    [\n      [1, 1],\n      [0, 1, 1],\n      {\n        rotatable: true,\n        base: [0, 1]\n      }\n    ],\n    [\n      [1],\n      [1],\n      [1],\n      [1],\n      {\n        rotatable: true,\n        base: [1, 0]\n      }\n    ],\n    [\n      [1, 0, 1],\n      [1, 1, 1],\n      {\n        rotatable: true,\n        base: [1, 1]\n      }\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 1],\n      {\n        rotatable: true,\n        base: [1, 1]\n      }\n    ],\n    [\n      [0, 1, 1],\n      [1, 1],\n      {\n        rotatable: true,\n        base: [0, 1]\n      }\n    ],\n    [\n      [1, 1],\n      [1],\n      [1],\n      {\n        rotatable: true,\n        base: [0, 0]\n      }\n    ],\n    [\n      [1, 1],\n      [1, 1],\n      {\n        rotatable: false\n      }\n    ],\n    [\n      [1, 1],\n      [0, 1],\n      [0, 1],\n      {\n        rotatable: true,\n        base: [0, 1]\n      }\n    ],\n    [\n      [1],\n      [1, 1],\n      {\n        rotatable: true,\n        base: [1, 0]\n      }\n    ],\n    [\n      [0, 1],\n      [1, 1],\n      {\n        rotatable: true,\n        base: [1, 1]\n      }\n    ],\n    [\n      [1],\n      {\n        rotatable: false\n      }\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 1, 0],\n      {\n        rotatable: false\n      }\n    ],\n    [\n      [1, 1],\n      {\n        rotatable: true,\n        base: [0, 0]\n      }\n    ]\n  ];\n\n  static mathRotate(baseCoord, rotateCoords) {\n    for (let i = 0, l = rotateCoords.length; i < l; i++) {\n      const coord = rotateCoords[i];\n      const relativeFromBase = {\n        x: coord.x - baseCoord.x,\n        y: coord.y - baseCoord.y\n      };\n\n      const transormed = {\n        x: -1 * relativeFromBase.y,\n        y: 1 * relativeFromBase.x\n      };\n\n      coord.x = baseCoord.x + transormed.x;\n      coord.y = baseCoord.y + transormed.y;\n    }\n  }\n\n  static mathMove(direction, coords) {\n    switch (direction) {\n      case 'left':\n        for (let i = 0, l = coords.length; i < l; i++) {\n          const coord = coords[i];\n          coord.x--;\n        }\n        break;\n\n      case 'right':\n        for (let i = 0, l = coords.length; i < l; i++) {\n          const coord = coords[i];\n          coord.x++;\n        }\n        break;\n\n      case 'bottom':\n        for (let i = 0, l = coords.length; i < l; i++) {\n          const coord = coords[i];\n          coord.y++;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  constructor(tetris) {\n    this.colorIndex = Math.floor(Math.random() * 4) + 1;\n    this.tetris = tetris;\n    this.form = Tetris.cloneDeep(Figure.forms[Math.floor(Math.random() * Figure.forms.length)]);\n    this.desc = this.form.pop();\n\n    if (this.desc.rotatable) {\n      this.rotateCoords = [];\n    }\n\n    this.coords = [];\n    for (let i = 0, l = this.form.length; i < l; i++) {\n      const row = this.form[i];\n      let x = 0;\n      for (let n = 0, s = row.length; n < s; n++) {\n        if (row[n]) {\n          const coord = {\n            x,\n            y: i\n          };\n          this.coords.push(coord);\n\n          if (this.desc.rotatable) {\n            if (this.desc.base[0] === i && this.desc.base[1] === n) {\n              this.baseCoord = coord;\n            } else {\n              this.rotateCoords.push(coord);\n            }\n          }\n        }\n        x++;\n      }\n    }\n\n    if (this.desc.rotatable) {\n      let rotateCount = Math.floor(Math.random() * 4);\n      // максимум вращаем 3 раза\n      while (rotateCount--) {\n        Figure.mathRotate(this.baseCoord, this.rotateCoords);\n      }\n    }\n\n    let maxX;\n    let minX;\n    let maxY;\n    let minY;\n    let minCoord;\n    for (let i = 0, l = this.coords.length; i < l; i++) {\n      const coord = this.coords[i];\n\n      if (maxX === undefined) { maxX = coord.x; }\n      if (minX === undefined) {\n        minX = coord.x;\n      }\n\n      if (maxY === undefined) {\n        maxY = coord.y;\n      }\n      if (minY === undefined) { minY = coord.y; }\n\n      if (minCoord === undefined) {\n        minCoord = coord;\n      }\n\n      if (coord.x > maxX) { maxX = coord.x; }\n      if (coord.x < minX) {\n        minX = coord.x;\n      }\n\n      if (coord.y > maxY) { maxY = coord.y; }\n      if (coord.y < minY) {\n        minY = coord.y;\n      }\n    }\n    const width = (maxX - minX) + 1;\n    const height = (maxY - minY) + 1;\n\n    const startX = Math.floor((tetris.params.cells - width) / 2);\n    const startY = -1 * (height);\n    const offsetX = startX - minX;\n    const offsetY = startY - minY;\n\n    for (let i = 0, l = this.coords.length; i < l; i++) {\n      const coord = this.coords[i];\n\n      coord.x += offsetX;\n      coord.y += offsetY;\n    }\n  }\n\n  touched() {\n    for (let i = 0, l = this.coords.length; i < l; i++) {\n      const coord = this.coords[i];\n\n      if (coord.y >= -1) {\n        // в конце поля\n        if (this.tetris.rows[coord.y + 1] === undefined) {\n          return true;\n        }\n\n        // за фигурой есть что-то\n        if (this.tetris.rows[coord.y + 1].cells[coord.x].filled) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  toBricks() {\n    for (let i = 0, l = this.coords.length; i < l; i++) {\n      const coord = this.coords[i];\n      if (coord.y >= 0) {\n        this.tetris.rows[coord.y].cells[coord.x].filled = true;\n        this.tetris.rows[coord.y].cells[coord.x].colorIndex = this.colorIndex;\n      }\n    }\n  }\n\n  rotate() {\n    if (!this.desc.rotatable) {\n      return;\n    }\n\n    const pristineCoords = Tetris.cloneDeep(this.coords);\n    Figure.mathRotate(this.baseCoord, this.rotateCoords);\n\n    for (let i = 0, l = this.coords.length; i < l; i++) {\n      const coord = this.coords[i];\n\n      if (coord.x < 0) {\n        Figure.mathMove('right', this.coords);\n      } else if (coord.x > (this.tetris.params.cells - 1)) {\n        Figure.mathMove('left', this.coords);\n      }\n\n      const row = this.tetris.rows[coord.y];\n      if (row) {\n        const cell = row.cells[coord.x];\n        const rowAbove = this.tetris.rows[coord.y - 1];\n        let cellAbove;\n        if (rowAbove) {\n          cellAbove = rowAbove.cells[coord.x];\n        }\n\n        if ((cell && cell.filled) || (cellAbove && cellAbove.filled)) {\n          if (this.baseCoord.x < coord.x) {\n            Figure.mathMove('left', this.coords);\n          } else if (this.baseCoord.x > coord.x) {\n            Figure.mathMove('right', this.coords);\n          }\n        }\n      }\n    }\n\n    for (let i = 0, l = this.coords.length; i < l; i++) {\n      const coord = this.coords[i];\n\n      if (coord.y >= 0) {\n        const row = this.tetris.rows[coord.y];\n        if (!row) {\n          Tetris.assignDeep(this.coords, pristineCoords, true);\n          return;\n        }\n\n        const cell = row.cells[coord.x];\n        if (!cell || cell.filled) {\n          Tetris.assignDeep(this.coords, pristineCoords, true);\n          return;\n        }\n      }\n    }\n  }\n\n  move(direction) {\n    let canMove;\n\n    switch (direction) {\n      case 'left':\n        canMove = true;\n        for (let i = 0, l = this.coords.length; i < l; i++) {\n          const coord = this.coords[i];\n\n          if ((coord.x - 1) < 0) {\n            canMove = false;\n            break;\n          }\n\n          if (\n            this.tetris.rows[coord.y]\n            && this.tetris.rows[coord.y].cells[coord.x - 1]\n            && this.tetris.rows[coord.y].cells[coord.x - 1].filled\n          ) {\n            canMove = false;\n            break;\n          }\n        }\n\n        if (canMove) {\n          Figure.mathMove('left', this.coords);\n        }\n        break;\n\n      case 'right':\n        canMove = true;\n        for (let i = 0, l = this.coords.length; i < l; i++) {\n          const coord = this.coords[i];\n\n          if ((coord.x + 2 > this.tetris.params.cells)) {\n            canMove = false;\n            break;\n          }\n\n          if (\n            this.tetris.rows[coord.y]\n            && this.tetris.rows[coord.y].cells[coord.x + 1]\n            && this.tetris.rows[coord.y].cells[coord.x + 1].filled\n          ) {\n            canMove = false;\n            break;\n          }\n        }\n\n        if (canMove) {\n          Figure.mathMove('right', this.coords);\n        }\n        break;\n\n      case 'bottom':\n        if (this.touched()) {\n          return;\n        }\n\n        Figure.mathMove('bottom', this.coords);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport default Figure;\n\n\n\n// WEBPACK FOOTER //\n// ./src/figure.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tetris.css\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}